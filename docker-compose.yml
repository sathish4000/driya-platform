version: '3.8'

services:
  # Backend API service (ASP.NET Core)
  driya.platform:
    image: ${DOCKER_REGISTRY:-}driyaplatform
    build:
      context: .
      dockerfile: DRIYA.Platform/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    depends_on:
      - postgres
      - redis

  # Frontend service (React/Vue/Angular)
  driya.platformui:
    image: ${DOCKER_REGISTRY:-}driyaplatformui
    build:
      context: ./driya.platformui   # Use the frontend folder as build context
      dockerfile: Dockerfile         # Dockerfile inside the frontend folder
    environment:
      - NODE_ENV=production
    depends_on:
      - driya.platform

  # PostgreSQL database service
  postgres:
    image: postgres:latest
    container_name: driya_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis service
  redis:
    image: redis:latest
    container_name: driya_redis
    ports:
      - "6379:6379"
    command: ["redis-server"]

volumes:
  postgres_data:
